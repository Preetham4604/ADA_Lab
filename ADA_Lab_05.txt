#include <stdio.h>
#define MAX 100
int adj[MAX][MAX];
int visited[MAX];
int stack[MAX];  
int top = -1;    
void dfs(int v, int n) {
    visited[v] = 1;
    for (int i = 0; i < n; i++) {
        if (adj[v][i] == 1 && !visited[i]) {
            dfs(i, n);
        }
    }
    stack[++top] = v;
}
void topo(int n) {
    for (int i = 0; i < n; i++) {
        if (!visited[i]) {
            dfs(i, n);
        }
    }
}
int main() {
    int n, e;
    printf("Enter the number of vertices: ");
    scanf("%d", &n);
    printf("Enter the number of edges: ");
    scanf("%d", &e);
    for (int i = 0; i < n; i++) {
        visited[i] = 0;
        for (int j = 0; j < n; j++) {
            adj[i][j] = 0;
        }
    }
    printf("Enter the edges (src dest) format:\n");
    for (int i = 0; i < e; i++) {
        int src, dest;
        scanf("%d %d", &src, &dest);
        adj[src][dest] = 1;
    }
    printf("Topological sorting is: ");
    topo(n);
    while (top != -1) {
        printf("%d ", stack[top--]);
    }
    printf("\n");
    return 0;
}