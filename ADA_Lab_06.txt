#include <stdio.h> 
#include <stdlib.h> 
#define MAX_ITEMS 50 
#define max(a, b) ((a > b) ? a : b) 
void knapsack(int n, int m, int w[], int p[]) { 
int v[MAX_ITEMS + 1][m + 1]; 
for (int i = 0; i <= n; i++) {  
        for (int j = 0; j <= m; j++) { 
            if (i == 0 || j == 0) { 
                v[i][j] = 0; 
            } else if (j < w[i - 1]) { 
                v[i][j] = v[i - 1][j]; 
            } else { 
                v[i][j] = max(v[i - 1][j], v[i - 1][j - w[i - 1]] + p[i - 1]); 
            } 
        } 
    } 
    printf ("Solution Matrix:\n"); 
    for (int i = 0; i <= n; i++) { 
        for (int j = 0; j <= m; j++) { 
            printf ("%d\t", v[i][j]); 
        } 
        printf ("\n"); 
    } 
    printf("Solution: %d units\n", v[n][m]); 
} 
int main() { 
    int n, m; 
    printf ("Enter the number of items: "); 
    scanf("%d", &n); 
    int w[MAX_ITEMS], p[MAX_ITEMS]; 
    printf ("Enter the capacity of knapsack: "); 
    scanf("%d", &m); 
    printf("Enter the weight of items:\n"); 
    for (int i = 0; i < n; i++) { 
        scanf("%d", &w[i]); 
    } 
    printf("Enter the profit of items:\n"); 
    for(int i = 0; i < n; i++) { 
        scanf("%d", &p[i]); 
    } 
    knapsack(n, m, w, p); 
    return 0; 
} 